{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"algo_problems/","title":"Algorithmic Problems","text":""},{"location":"algo_problems/#arraystring","title":"Array/String","text":"<p>\u80a1\u7968\u7cfb\u5217\u95ee\u9898\u901a\u89e3</p>"},{"location":"algo_problems/#two-pointers","title":"Two Pointers","text":""},{"location":"algo_problems/#sliding-window","title":"Sliding Window","text":""},{"location":"algo_problems/#matrix","title":"Matrix","text":""},{"location":"algo_problems/#hashmap","title":"Hashmap","text":""},{"location":"algo_problems/#intervals","title":"Intervals","text":""},{"location":"algo_problems/#stack","title":"Stack","text":""},{"location":"algo_problems/#linked-list","title":"Linked List","text":""},{"location":"algo_problems/#binary-tree-general","title":"Binary Tree General","text":""},{"location":"algo_problems/#binary-tree-bfs","title":"Binary Tree BFS","text":""},{"location":"algo_problems/#binary-search-tree","title":"Binary Search Tree","text":""},{"location":"algo_problems/#graph-general","title":"Graph General","text":""},{"location":"algo_problems/#graph-bfs","title":"Graph BFS","text":""},{"location":"algo_problems/#trie","title":"Trie","text":""},{"location":"algo_problems/#backtracking","title":"Backtracking","text":""},{"location":"algo_problems/#divide-conquer","title":"Divide &amp; Conquer","text":""},{"location":"algo_problems/#kadanes-algorithm","title":"Kadane's Algorithm","text":""},{"location":"algo_problems/#binary-search","title":"Binary Search","text":""},{"location":"algo_problems/#heap","title":"Heap","text":""},{"location":"algo_problems/#bit-manipulation","title":"Bit Manipulation","text":""},{"location":"algo_problems/#math","title":"Math","text":""},{"location":"algo_problems/#1d-dp","title":"1D DP","text":""},{"location":"algo_problems/#multidimensional-dp","title":"Multidimensional DP","text":""},{"location":"cpp_interview/","title":"C++\u9762\u8bd5","text":""},{"location":"cpp_interview/#_1","title":"\u57fa\u7840","text":""},{"location":"cpp_interview/#_2","title":"\u64cd\u4f5c\u7cfb\u7edf","text":""},{"location":"cpp_interview/#_3","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":""},{"location":"cpp_interview/#_4","title":"\u6570\u636e\u5e93","text":""},{"location":"cpp_interview/#_5","title":"\u6570\u636e\u5e93","text":""},{"location":"cpp_interview/#_6","title":"\u7d22\u5f15","text":""},{"location":"cpp_interview/#_7","title":"\u4e8b\u52a1","text":""},{"location":"cpp_interview/#_8","title":"\u9501","text":""},{"location":"cpp_interview/#_9","title":"\u5176\u4ed6","text":""},{"location":"cpp_interview/#_10","title":"\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784","text":""},{"location":"cpp_interview/#_11","title":"\u6811","text":""},{"location":"cpp_interview/#_12","title":"\u6570\u7ec4","text":""},{"location":"cpp_interview/#_13","title":"\u6392\u5e8f","text":""},{"location":"cpp_interview/#_14","title":"\u54c8\u5e0c","text":""},{"location":"cpp_interview/#_15","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"cpp_interview/#_16","title":"\u94fe\u8868","text":""},{"location":"cpp_interview/#_17","title":"\u5b57\u7b26\u4e32","text":""},{"location":"cpp_interview/#_18","title":"\u8bbe\u8ba1\u6a21\u5f0f","text":""},{"location":"cpp_interview/#_19","title":"\u5355\u4f8b\u6a21\u5f0f","text":""},{"location":"cpp_interview/#_20","title":"\u5de5\u5382\u6a21\u5f0f","text":""},{"location":"cpp_interview/#_21","title":"\u88c5\u9970\u5668\u6a21\u5f0f","text":""},{"location":"cpp_interview/#_22","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f","text":""},{"location":"pages2/","title":"Page 2","text":""},{"location":"pages2/#another-heading","title":"Another Heading","text":"<p>Some more example text</p>"},{"location":"pages2/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"pages2/#code-blocks","title":"Code blocks","text":"<p>Some <code>code</code> goes here</p>"},{"location":"pages2/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"pages2/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the 'py' at the start;</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"pages2/#code-with-a-title","title":"Code with a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n</code></pre> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items)-1-i):\n            if items[j] &gt; items[j+1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items)-1-i):\n            if items[j] &gt; items[j+1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"pages2/#icons-and-emojis","title":"Icons and Emojis","text":""}]}